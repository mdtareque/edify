(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: 'manage_course'"
p3
sS'layer'
p4
S'/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/applications/edify/controllers/course.py'
p5
sS'code'
p6
S'import time\n\n@auth.requires_login()\ndef index():\n\t#list the courses available for current year for registration\n\tcourses = []\n\trows = db(db.course).select()\n\tfor row in rows:\n\t\tcourses.append([row.name, row.faculty.first_name + " " +  row.faculty.last_name, row.id])\n\treturn locals()\n\n@auth.requires_login()\ndef view():\n\tcourse_id = request.args(0)\n\trows = db(db.course.id ==course_id).select()\n\t#faculty = None\n\tif(len(rows) == 0):\n\t\tresponse.flash = "Invalid course"\n\telse:\n\t\tmessage = rows[0].name\n\t\tfaculty = rows[0].faculty.first_name + " " + rows[0].faculty.last_name\n\t\tcourse_description = rows[0].course_description\n\t\trows = db((db.course_registration.cid==course_id)&(db.course_registration.sid==auth.user.id)).select()\n\t\tif len(rows) == 0:\n\t\t\tregistered = 0\n\t\telse:\n\t\t\tregistered = 1\n\t\trows = db((db.course_ta.cid==course_id)&(db.course_ta.sid==auth.user.id)).select()\n\t\tif len(rows) == 0:\n\t\t\tis_ta = 0\n\t\telse:\n\t\t\tis_ta = 1\t\n\treturn locals()\n\n@auth.requires_login()\ndef register():\n\tcourse_id = request.args(0)\n\trows = db(db.course.id ==course_id).select()\n\t#faculty = None\n\tif(len(rows) == 0):\n\t\tresponse.flash = "Invalid course"\n\telse:\n\t\tdb.course_registration.insert(cid=course_id, sid=auth.user.id)\n\t\tredirect(URL("course","view/"+str(course_id)))\n\treturn locals()\n\t\t\n@auth.requires_login()\ndef unregister():\n\tcourse_id = request.args(0)\n\trows = db(db.course.id ==course_id).select()\n\tif(len(rows) == 0):\n\t\tresponse.flash = "Invalid course"\n\telse:\n\t\tdb((db.course_registration.cid==course_id)&(db.course_registration.sid==auth.user.id)).delete()\n\t\tredirect(URL("course","view/"+str(course_id)))\n\treturn locals()\n\n@auth.requires_login()\ndef ta_register():\n\tcourse_id = request.args(0)\n\trows = db(db.course.id ==course_id).select()\n\t#faculty = None\n\tif(len(rows) == 0):\n\t\tresponse.flash = "Invalid course"\n\telse:\n\t\tdb.course_ta.insert(cid=course_id, sid=auth.user.id)\n\t\tredirect(URL("course","view/"+str(course_id)))\n\treturn locals()\n\t\t\n@auth.requires_login()\ndef ta_unregister():\n\tcourse_id = request.args(0)\n\trows = db(db.course.id ==course_id).select()\n\tif(len(rows) == 0):\n\t\tresponse.flash = "Invalid course"\n\telse:\n\t\tdb((db.course_ta.cid==course_id)&(db.course_ta.sid==auth.user.id)).delete()\n\t\tredirect(URL("course","view/"+str(course_id)))\n\treturn locals()\n\n@auth.requires_login()\ndef manage_course():\n\tcourse_id = request.args(0)\t\n\tta_requests = db((db.course_ta.cid == course_id)&(db.course_ta.approval == \'no\')).select()\n\tif(len(ta_requests) == 0):\n\t\tresponse.flash = "Invalid course"\n\telse:\n\t\tmessage = ta_requests[0].cid.name\n\treturn locals()\n\n@auth.requires_login()\ndef approve_ta():\n\tta_id =request.args(0)\n\tta_requests = db((db.course_ta.id == ta_id)).select()\n\tif(len(ta_requests) == 0):\n\t\tresponse.flash = "Invalid TA"\n\telse:\n\t\tdb((db.course_ta.id == ta_id)).update(approval=\'yes\')\n\t\tredirect("manage_course")\n\treturn locals()\nresponse._vars=response._caller(approve_ta)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/restricted.py", line 227, in restricted\n    exec ccode in environment\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/applications/edify/controllers/course.py", line 101, in <module>\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/globals.py", line 412, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/tools.py", line 3774, in f\n    return action(*a, **b)\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/applications/edify/controllers/course.py", line 94, in approve_ta\n    ta_requests = db((db.course_ta.id == ta_id)).select()\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/packages/dal/pydal/objects.py", line 2002, in select\n    return adapter.select(self.query,fields,attributes)\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/packages/dal/pydal/adapters/sqlite.py", line 122, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1273, in select\n    sql = self._select(query, fields, attributes)\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1160, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/packages/dal/pydal/adapters/base.py", line 945, in expand\n    rv = op(first, second, **optional_args)\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/packages/dal/pydal/adapters/base.py", line 839, in EQ\n    self.expand(second, first.type))\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/packages/dal/pydal/adapters/base.py", line 955, in expand\n    rv = self.represent(expression, field_type)\n  File "/Users/adityagaykar/Dropbox/Development/MtechCSE/Sem1/SCE/Project/web2py/gluon/packages/dal/pydal/adapters/base.py", line 1425, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'manage_course\'\n'
p11
s.